version: "3.7"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xmx2G"
    ports:
      - "9201:9200"
      - "9300:9300"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      start_period: 1m
      interval: 1s
      timeout: 1s
    deploy:
      resources:
        limits:
          memory: 4G
  elasticsearch-dataloader: # Load data
    image: elasticdump/elasticsearch-dump:v6.110.0
    restart: "no"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./elasticdump/:/local_mount
    command: ["/bin/bash", "-c", "/local_mount/add_test_data.sh"]
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    environment:
      ELASTICSEARCH_HOSTS: '["http://mitmproxy:8080"]'
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: 'QUESMAQUESMAQUESMAQUESMAQUESMAQUESMAQUESMAQUESMA' # Just to get rid of annoying ERROR in logs
    #      LOGGING_ROOT_LEVEL: 'debug'
    depends_on:
      clean-mitmproxy:
        condition: service_completed_successfully
      mitmproxy:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    restart: unless-stopped
    healthcheck:
      test: "curl -s http://localhost:5601/api/status >/dev/null || exit 1"
      start_period: 2m
      interval: 1s
      timeout: 1s
  kibana-sidecar: # Modify
    image: docker.elastic.co/kibana/kibana:8.11.1
    restart: "no"
    depends_on:
      kibana:
        condition: service_healthy
    volumes:
      - ../kibana/:/local_mount
    command: ["/bin/bash", "-c", "/local_mount/qa/add_kibana_view.sh"]
  mitmproxy:
    image: mitmproxy/mitmproxy:10.1.5
    tty: true
    ports:
      - "9200:8080"
      - "8081:8081"
    command: >
      mitmweb --set termlog_verbosity=warn --no-web-open-browser --web-host 0.0.0.0 --mode reverse:http://elasticsearch:9200/ -s /var/mitmproxy/record.py
    #   The files will be available in mitmproxy/requests/*.json
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./mitmproxy:/var/mitmproxy
    healthcheck:
      # No curl/wget, going old school
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      interval: 1s
      start_period: 1m
      timeout: 1s
  clean-mitmproxy:
    build: ../clean-mitmproxy
    depends_on:
      mitmproxy:
        condition: service_healthy
    restart: "no"
    volumes:
      - ../mitmproxy:/var/mitmproxy