version: "3.7"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xmx2G"
    ports:
      - "9201:9200"
      - "9300:9300"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      start_period: 1m
      interval: 1s
      timeout: 1s
    deploy:
      resources:
        limits:
          memory: 4G
  elasticsearch-dataloader: # Load data
    image: elasticdump/elasticsearch-dump:v6.110.0
    restart: "no"
    links:
      - "elasticsearch"
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./elasticdump/:/local_mount
    command: ["/bin/bash", "-c", "/local_mount/add_test_data.sh"]
  replay-traffic:
    build: replay-traffic
    depends_on:
      mitmproxy:
        condition: service_healthy
      elasticsearch-dataloader:
        condition: service_completed_successfully
    restart: "no"
  mitmproxy:
    image: mitmproxy/mitmproxy:10.1.5
    tty: true
    ports:
      - "9200:8080"
      - "8081:8081"
    command: >
      mitmweb --set termlog_verbosity=warn --no-web-open-browser --web-host 0.0.0.0 --mode reverse:http://elasticsearch:9200/
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./mitmproxy:/var/mitmproxy
    healthcheck:
      # No curl/wget, going old school
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      interval: 1s
      start_period: 1m
      timeout: 1s