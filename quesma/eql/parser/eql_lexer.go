// Code generated from quesma/eql/parser/EQL.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type EQLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var EQLLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func eqllexerLexerInit() {
	staticData := &EQLLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'|'", "'where'", "'sequence'", "'by'", "'with'", "'maxspan'", "'='",
		"'['", "']'", "'sample'", "'not'", "'('", "')'", "'=='", "'!='", "'>'",
		"'<'", "'>='", "'<='", "':'", "'like'", "'like~'", "'regex'", "'regex~'",
		"'in'", "'in~'", "'and'", "'or'", "','", "'null'", "'*'", "'/'", "'%'",
		"'+'", "'-'", "'head'", "'tail'", "'count'", "'unique'", "'filter'",
		"'sort'", "'~'", "'any'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "ANY", "MULTILINE_COMMENT", "ONELINE_COMMNET",
		"BOOLEAN", "INTERVAL", "NUMBER", "ESC", "STRING", "WS", "ID",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
		"T__41", "ANY", "MULTILINE_COMMENT", "ONELINE_COMMNET", "BOOLEAN", "INTERVAL",
		"NUMBER", "ESC", "STRING", "WS", "ID",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 52, 394, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 1,
		0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
		2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1,
		4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1,
		7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1,
		14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18,
		1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 28,
		1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1,
		32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35,
		1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1,
		37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39,
		1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1,
		41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 5, 43, 278,
		8, 43, 10, 43, 12, 43, 281, 9, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1,
		44, 1, 44, 1, 44, 1, 44, 5, 44, 292, 8, 44, 10, 44, 12, 44, 295, 9, 44,
		1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1,
		45, 3, 45, 308, 8, 45, 1, 46, 4, 46, 311, 8, 46, 11, 46, 12, 46, 312, 1,
		46, 1, 46, 1, 47, 1, 47, 3, 47, 319, 8, 47, 1, 47, 4, 47, 322, 8, 47, 11,
		47, 12, 47, 323, 1, 47, 5, 47, 327, 8, 47, 10, 47, 12, 47, 330, 9, 47,
		1, 47, 1, 47, 4, 47, 334, 8, 47, 11, 47, 12, 47, 335, 3, 47, 338, 8, 47,
		1, 47, 1, 47, 3, 47, 342, 8, 47, 1, 47, 4, 47, 345, 8, 47, 11, 47, 12,
		47, 346, 3, 47, 349, 8, 47, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1,
		49, 1, 49, 1, 49, 5, 49, 360, 8, 49, 10, 49, 12, 49, 363, 9, 49, 1, 49,
		1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 5, 49, 371, 8, 49, 10, 49, 12, 49, 374,
		9, 49, 1, 49, 1, 49, 1, 49, 3, 49, 379, 8, 49, 1, 50, 4, 50, 382, 8, 50,
		11, 50, 12, 50, 383, 1, 50, 1, 50, 1, 51, 1, 51, 5, 51, 390, 8, 51, 10,
		51, 12, 51, 393, 9, 51, 2, 279, 372, 0, 52, 1, 1, 3, 2, 5, 3, 7, 4, 9,
		5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14,
		29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23,
		47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32,
		65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41,
		83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50,
		101, 51, 103, 52, 1, 0, 9, 2, 0, 10, 10, 13, 13, 1, 0, 48, 57, 1, 0, 97,
		122, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 2, 0, 34, 34, 92, 92,
		3, 0, 9, 10, 12, 13, 32, 32, 3, 0, 65, 90, 95, 95, 97, 122, 5, 0, 45, 46,
		48, 57, 65, 90, 95, 95, 97, 122, 412, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0,
		0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
		0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
		0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1,
		0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35,
		1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0,
		43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0,
		0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0,
		0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0,
		0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1,
		0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81,
		1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0,
		89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0,
		0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0,
		0, 0, 1, 105, 1, 0, 0, 0, 3, 107, 1, 0, 0, 0, 5, 113, 1, 0, 0, 0, 7, 122,
		1, 0, 0, 0, 9, 125, 1, 0, 0, 0, 11, 130, 1, 0, 0, 0, 13, 138, 1, 0, 0,
		0, 15, 140, 1, 0, 0, 0, 17, 142, 1, 0, 0, 0, 19, 144, 1, 0, 0, 0, 21, 151,
		1, 0, 0, 0, 23, 155, 1, 0, 0, 0, 25, 157, 1, 0, 0, 0, 27, 159, 1, 0, 0,
		0, 29, 162, 1, 0, 0, 0, 31, 165, 1, 0, 0, 0, 33, 167, 1, 0, 0, 0, 35, 169,
		1, 0, 0, 0, 37, 172, 1, 0, 0, 0, 39, 175, 1, 0, 0, 0, 41, 177, 1, 0, 0,
		0, 43, 182, 1, 0, 0, 0, 45, 188, 1, 0, 0, 0, 47, 194, 1, 0, 0, 0, 49, 201,
		1, 0, 0, 0, 51, 204, 1, 0, 0, 0, 53, 208, 1, 0, 0, 0, 55, 212, 1, 0, 0,
		0, 57, 215, 1, 0, 0, 0, 59, 217, 1, 0, 0, 0, 61, 222, 1, 0, 0, 0, 63, 224,
		1, 0, 0, 0, 65, 226, 1, 0, 0, 0, 67, 228, 1, 0, 0, 0, 69, 230, 1, 0, 0,
		0, 71, 232, 1, 0, 0, 0, 73, 237, 1, 0, 0, 0, 75, 242, 1, 0, 0, 0, 77, 248,
		1, 0, 0, 0, 79, 255, 1, 0, 0, 0, 81, 262, 1, 0, 0, 0, 83, 267, 1, 0, 0,
		0, 85, 269, 1, 0, 0, 0, 87, 273, 1, 0, 0, 0, 89, 287, 1, 0, 0, 0, 91, 307,
		1, 0, 0, 0, 93, 310, 1, 0, 0, 0, 95, 318, 1, 0, 0, 0, 97, 350, 1, 0, 0,
		0, 99, 378, 1, 0, 0, 0, 101, 381, 1, 0, 0, 0, 103, 387, 1, 0, 0, 0, 105,
		106, 5, 124, 0, 0, 106, 2, 1, 0, 0, 0, 107, 108, 5, 119, 0, 0, 108, 109,
		5, 104, 0, 0, 109, 110, 5, 101, 0, 0, 110, 111, 5, 114, 0, 0, 111, 112,
		5, 101, 0, 0, 112, 4, 1, 0, 0, 0, 113, 114, 5, 115, 0, 0, 114, 115, 5,
		101, 0, 0, 115, 116, 5, 113, 0, 0, 116, 117, 5, 117, 0, 0, 117, 118, 5,
		101, 0, 0, 118, 119, 5, 110, 0, 0, 119, 120, 5, 99, 0, 0, 120, 121, 5,
		101, 0, 0, 121, 6, 1, 0, 0, 0, 122, 123, 5, 98, 0, 0, 123, 124, 5, 121,
		0, 0, 124, 8, 1, 0, 0, 0, 125, 126, 5, 119, 0, 0, 126, 127, 5, 105, 0,
		0, 127, 128, 5, 116, 0, 0, 128, 129, 5, 104, 0, 0, 129, 10, 1, 0, 0, 0,
		130, 131, 5, 109, 0, 0, 131, 132, 5, 97, 0, 0, 132, 133, 5, 120, 0, 0,
		133, 134, 5, 115, 0, 0, 134, 135, 5, 112, 0, 0, 135, 136, 5, 97, 0, 0,
		136, 137, 5, 110, 0, 0, 137, 12, 1, 0, 0, 0, 138, 139, 5, 61, 0, 0, 139,
		14, 1, 0, 0, 0, 140, 141, 5, 91, 0, 0, 141, 16, 1, 0, 0, 0, 142, 143, 5,
		93, 0, 0, 143, 18, 1, 0, 0, 0, 144, 145, 5, 115, 0, 0, 145, 146, 5, 97,
		0, 0, 146, 147, 5, 109, 0, 0, 147, 148, 5, 112, 0, 0, 148, 149, 5, 108,
		0, 0, 149, 150, 5, 101, 0, 0, 150, 20, 1, 0, 0, 0, 151, 152, 5, 110, 0,
		0, 152, 153, 5, 111, 0, 0, 153, 154, 5, 116, 0, 0, 154, 22, 1, 0, 0, 0,
		155, 156, 5, 40, 0, 0, 156, 24, 1, 0, 0, 0, 157, 158, 5, 41, 0, 0, 158,
		26, 1, 0, 0, 0, 159, 160, 5, 61, 0, 0, 160, 161, 5, 61, 0, 0, 161, 28,
		1, 0, 0, 0, 162, 163, 5, 33, 0, 0, 163, 164, 5, 61, 0, 0, 164, 30, 1, 0,
		0, 0, 165, 166, 5, 62, 0, 0, 166, 32, 1, 0, 0, 0, 167, 168, 5, 60, 0, 0,
		168, 34, 1, 0, 0, 0, 169, 170, 5, 62, 0, 0, 170, 171, 5, 61, 0, 0, 171,
		36, 1, 0, 0, 0, 172, 173, 5, 60, 0, 0, 173, 174, 5, 61, 0, 0, 174, 38,
		1, 0, 0, 0, 175, 176, 5, 58, 0, 0, 176, 40, 1, 0, 0, 0, 177, 178, 5, 108,
		0, 0, 178, 179, 5, 105, 0, 0, 179, 180, 5, 107, 0, 0, 180, 181, 5, 101,
		0, 0, 181, 42, 1, 0, 0, 0, 182, 183, 5, 108, 0, 0, 183, 184, 5, 105, 0,
		0, 184, 185, 5, 107, 0, 0, 185, 186, 5, 101, 0, 0, 186, 187, 5, 126, 0,
		0, 187, 44, 1, 0, 0, 0, 188, 189, 5, 114, 0, 0, 189, 190, 5, 101, 0, 0,
		190, 191, 5, 103, 0, 0, 191, 192, 5, 101, 0, 0, 192, 193, 5, 120, 0, 0,
		193, 46, 1, 0, 0, 0, 194, 195, 5, 114, 0, 0, 195, 196, 5, 101, 0, 0, 196,
		197, 5, 103, 0, 0, 197, 198, 5, 101, 0, 0, 198, 199, 5, 120, 0, 0, 199,
		200, 5, 126, 0, 0, 200, 48, 1, 0, 0, 0, 201, 202, 5, 105, 0, 0, 202, 203,
		5, 110, 0, 0, 203, 50, 1, 0, 0, 0, 204, 205, 5, 105, 0, 0, 205, 206, 5,
		110, 0, 0, 206, 207, 5, 126, 0, 0, 207, 52, 1, 0, 0, 0, 208, 209, 5, 97,
		0, 0, 209, 210, 5, 110, 0, 0, 210, 211, 5, 100, 0, 0, 211, 54, 1, 0, 0,
		0, 212, 213, 5, 111, 0, 0, 213, 214, 5, 114, 0, 0, 214, 56, 1, 0, 0, 0,
		215, 216, 5, 44, 0, 0, 216, 58, 1, 0, 0, 0, 217, 218, 5, 110, 0, 0, 218,
		219, 5, 117, 0, 0, 219, 220, 5, 108, 0, 0, 220, 221, 5, 108, 0, 0, 221,
		60, 1, 0, 0, 0, 222, 223, 5, 42, 0, 0, 223, 62, 1, 0, 0, 0, 224, 225, 5,
		47, 0, 0, 225, 64, 1, 0, 0, 0, 226, 227, 5, 37, 0, 0, 227, 66, 1, 0, 0,
		0, 228, 229, 5, 43, 0, 0, 229, 68, 1, 0, 0, 0, 230, 231, 5, 45, 0, 0, 231,
		70, 1, 0, 0, 0, 232, 233, 5, 104, 0, 0, 233, 234, 5, 101, 0, 0, 234, 235,
		5, 97, 0, 0, 235, 236, 5, 100, 0, 0, 236, 72, 1, 0, 0, 0, 237, 238, 5,
		116, 0, 0, 238, 239, 5, 97, 0, 0, 239, 240, 5, 105, 0, 0, 240, 241, 5,
		108, 0, 0, 241, 74, 1, 0, 0, 0, 242, 243, 5, 99, 0, 0, 243, 244, 5, 111,
		0, 0, 244, 245, 5, 117, 0, 0, 245, 246, 5, 110, 0, 0, 246, 247, 5, 116,
		0, 0, 247, 76, 1, 0, 0, 0, 248, 249, 5, 117, 0, 0, 249, 250, 5, 110, 0,
		0, 250, 251, 5, 105, 0, 0, 251, 252, 5, 113, 0, 0, 252, 253, 5, 117, 0,
		0, 253, 254, 5, 101, 0, 0, 254, 78, 1, 0, 0, 0, 255, 256, 5, 102, 0, 0,
		256, 257, 5, 105, 0, 0, 257, 258, 5, 108, 0, 0, 258, 259, 5, 116, 0, 0,
		259, 260, 5, 101, 0, 0, 260, 261, 5, 114, 0, 0, 261, 80, 1, 0, 0, 0, 262,
		263, 5, 115, 0, 0, 263, 264, 5, 111, 0, 0, 264, 265, 5, 114, 0, 0, 265,
		266, 5, 116, 0, 0, 266, 82, 1, 0, 0, 0, 267, 268, 5, 126, 0, 0, 268, 84,
		1, 0, 0, 0, 269, 270, 5, 97, 0, 0, 270, 271, 5, 110, 0, 0, 271, 272, 5,
		121, 0, 0, 272, 86, 1, 0, 0, 0, 273, 274, 5, 47, 0, 0, 274, 275, 5, 42,
		0, 0, 275, 279, 1, 0, 0, 0, 276, 278, 9, 0, 0, 0, 277, 276, 1, 0, 0, 0,
		278, 281, 1, 0, 0, 0, 279, 280, 1, 0, 0, 0, 279, 277, 1, 0, 0, 0, 280,
		282, 1, 0, 0, 0, 281, 279, 1, 0, 0, 0, 282, 283, 5, 42, 0, 0, 283, 284,
		5, 47, 0, 0, 284, 285, 1, 0, 0, 0, 285, 286, 6, 43, 0, 0, 286, 88, 1, 0,
		0, 0, 287, 288, 5, 47, 0, 0, 288, 289, 5, 47, 0, 0, 289, 293, 1, 0, 0,
		0, 290, 292, 8, 0, 0, 0, 291, 290, 1, 0, 0, 0, 292, 295, 1, 0, 0, 0, 293,
		291, 1, 0, 0, 0, 293, 294, 1, 0, 0, 0, 294, 296, 1, 0, 0, 0, 295, 293,
		1, 0, 0, 0, 296, 297, 6, 44, 0, 0, 297, 90, 1, 0, 0, 0, 298, 299, 5, 116,
		0, 0, 299, 300, 5, 114, 0, 0, 300, 301, 5, 117, 0, 0, 301, 308, 5, 101,
		0, 0, 302, 303, 5, 102, 0, 0, 303, 304, 5, 97, 0, 0, 304, 305, 5, 108,
		0, 0, 305, 306, 5, 115, 0, 0, 306, 308, 5, 101, 0, 0, 307, 298, 1, 0, 0,
		0, 307, 302, 1, 0, 0, 0, 308, 92, 1, 0, 0, 0, 309, 311, 7, 1, 0, 0, 310,
		309, 1, 0, 0, 0, 311, 312, 1, 0, 0, 0, 312, 310, 1, 0, 0, 0, 312, 313,
		1, 0, 0, 0, 313, 314, 1, 0, 0, 0, 314, 315, 7, 2, 0, 0, 315, 94, 1, 0,
		0, 0, 316, 319, 5, 45, 0, 0, 317, 319, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0,
		318, 317, 1, 0, 0, 0, 319, 337, 1, 0, 0, 0, 320, 322, 7, 1, 0, 0, 321,
		320, 1, 0, 0, 0, 322, 323, 1, 0, 0, 0, 323, 321, 1, 0, 0, 0, 323, 324,
		1, 0, 0, 0, 324, 338, 1, 0, 0, 0, 325, 327, 7, 1, 0, 0, 326, 325, 1, 0,
		0, 0, 327, 330, 1, 0, 0, 0, 328, 326, 1, 0, 0, 0, 328, 329, 1, 0, 0, 0,
		329, 331, 1, 0, 0, 0, 330, 328, 1, 0, 0, 0, 331, 333, 5, 46, 0, 0, 332,
		334, 7, 1, 0, 0, 333, 332, 1, 0, 0, 0, 334, 335, 1, 0, 0, 0, 335, 333,
		1, 0, 0, 0, 335, 336, 1, 0, 0, 0, 336, 338, 1, 0, 0, 0, 337, 321, 1, 0,
		0, 0, 337, 328, 1, 0, 0, 0, 338, 348, 1, 0, 0, 0, 339, 341, 7, 3, 0, 0,
		340, 342, 7, 4, 0, 0, 341, 340, 1, 0, 0, 0, 341, 342, 1, 0, 0, 0, 342,
		344, 1, 0, 0, 0, 343, 345, 7, 1, 0, 0, 344, 343, 1, 0, 0, 0, 345, 346,
		1, 0, 0, 0, 346, 344, 1, 0, 0, 0, 346, 347, 1, 0, 0, 0, 347, 349, 1, 0,
		0, 0, 348, 339, 1, 0, 0, 0, 348, 349, 1, 0, 0, 0, 349, 96, 1, 0, 0, 0,
		350, 351, 5, 92, 0, 0, 351, 352, 9, 0, 0, 0, 352, 98, 1, 0, 0, 0, 353,
		361, 5, 34, 0, 0, 354, 355, 5, 92, 0, 0, 355, 360, 9, 0, 0, 0, 356, 357,
		5, 34, 0, 0, 357, 360, 5, 34, 0, 0, 358, 360, 8, 5, 0, 0, 359, 354, 1,
		0, 0, 0, 359, 356, 1, 0, 0, 0, 359, 358, 1, 0, 0, 0, 360, 363, 1, 0, 0,
		0, 361, 359, 1, 0, 0, 0, 361, 362, 1, 0, 0, 0, 362, 364, 1, 0, 0, 0, 363,
		361, 1, 0, 0, 0, 364, 379, 5, 34, 0, 0, 365, 366, 5, 34, 0, 0, 366, 367,
		5, 34, 0, 0, 367, 368, 5, 34, 0, 0, 368, 372, 1, 0, 0, 0, 369, 371, 9,
		0, 0, 0, 370, 369, 1, 0, 0, 0, 371, 374, 1, 0, 0, 0, 372, 373, 1, 0, 0,
		0, 372, 370, 1, 0, 0, 0, 373, 375, 1, 0, 0, 0, 374, 372, 1, 0, 0, 0, 375,
		376, 5, 34, 0, 0, 376, 377, 5, 34, 0, 0, 377, 379, 5, 34, 0, 0, 378, 353,
		1, 0, 0, 0, 378, 365, 1, 0, 0, 0, 379, 100, 1, 0, 0, 0, 380, 382, 7, 6,
		0, 0, 381, 380, 1, 0, 0, 0, 382, 383, 1, 0, 0, 0, 383, 381, 1, 0, 0, 0,
		383, 384, 1, 0, 0, 0, 384, 385, 1, 0, 0, 0, 385, 386, 6, 50, 1, 0, 386,
		102, 1, 0, 0, 0, 387, 391, 7, 7, 0, 0, 388, 390, 7, 8, 0, 0, 389, 388,
		1, 0, 0, 0, 390, 393, 1, 0, 0, 0, 391, 389, 1, 0, 0, 0, 391, 392, 1, 0,
		0, 0, 392, 104, 1, 0, 0, 0, 393, 391, 1, 0, 0, 0, 19, 0, 279, 293, 307,
		312, 318, 323, 328, 335, 337, 341, 346, 348, 359, 361, 372, 378, 383, 391,
		2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// EQLLexerInit initializes any static state used to implement EQLLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewEQLLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func EQLLexerInit() {
	staticData := &EQLLexerLexerStaticData
	staticData.once.Do(eqllexerLexerInit)
}

// NewEQLLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewEQLLexer(input antlr.CharStream) *EQLLexer {
	EQLLexerInit()
	l := new(EQLLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &EQLLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "EQL.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// EQLLexer tokens.
const (
	EQLLexerT__0              = 1
	EQLLexerT__1              = 2
	EQLLexerT__2              = 3
	EQLLexerT__3              = 4
	EQLLexerT__4              = 5
	EQLLexerT__5              = 6
	EQLLexerT__6              = 7
	EQLLexerT__7              = 8
	EQLLexerT__8              = 9
	EQLLexerT__9              = 10
	EQLLexerT__10             = 11
	EQLLexerT__11             = 12
	EQLLexerT__12             = 13
	EQLLexerT__13             = 14
	EQLLexerT__14             = 15
	EQLLexerT__15             = 16
	EQLLexerT__16             = 17
	EQLLexerT__17             = 18
	EQLLexerT__18             = 19
	EQLLexerT__19             = 20
	EQLLexerT__20             = 21
	EQLLexerT__21             = 22
	EQLLexerT__22             = 23
	EQLLexerT__23             = 24
	EQLLexerT__24             = 25
	EQLLexerT__25             = 26
	EQLLexerT__26             = 27
	EQLLexerT__27             = 28
	EQLLexerT__28             = 29
	EQLLexerT__29             = 30
	EQLLexerT__30             = 31
	EQLLexerT__31             = 32
	EQLLexerT__32             = 33
	EQLLexerT__33             = 34
	EQLLexerT__34             = 35
	EQLLexerT__35             = 36
	EQLLexerT__36             = 37
	EQLLexerT__37             = 38
	EQLLexerT__38             = 39
	EQLLexerT__39             = 40
	EQLLexerT__40             = 41
	EQLLexerT__41             = 42
	EQLLexerANY               = 43
	EQLLexerMULTILINE_COMMENT = 44
	EQLLexerONELINE_COMMNET   = 45
	EQLLexerBOOLEAN           = 46
	EQLLexerINTERVAL          = 47
	EQLLexerNUMBER            = 48
	EQLLexerESC               = 49
	EQLLexerSTRING            = 50
	EQLLexerWS                = 51
	EQLLexerID                = 52
)
