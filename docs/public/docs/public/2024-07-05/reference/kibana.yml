# Docker compose for reference OpenSearch Dashboards with Quesma: https://eap.quesma.com/eap-docs.html
version: "3.7"
services:
  quesma:
    image: ${QUESMA_DOCKER_IMAGE}
    environment:
      - QUESMA_elasticsearch_url=http://elasticsearch:9200
      - QUESMA_CONFIG_FILE=/config/quesma.yml
    depends_on:
      clickhouse:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    ports:
      - "9999:9999" # Debugging web UI
      - "8080:8080" # Elastic API through Quesma
    volumes:
      - ./quesma.yml:/config/quesma.yml
    deploy:
        resources:
          limits:
            memory: 2G
    restart: unless-stopped
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xmx2G"
    ports:
      - "9201:9200" # Elastic API bypassing Quesma
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      start_period: 1m
      interval: 1s
      timeout: 1s
    deploy:
      resources:
        limits:
          memory: 4G
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    environment:
      ELASTICSEARCH_HOSTS: '["http://quesma:8080"]'
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: 'QUESMAQUESMAQUESMAQUESMAQUESMAQUESMAQUESMAQUESMA' # No-op
    depends_on:
      quesma:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    ports:
      - "5601:5601" # Web UI
    restart: unless-stopped
    healthcheck:
      test: "curl -s http://localhost:5601/api/status >/dev/null || exit 1"
      start_period: 2m
      interval: 1s
      timeout: 1s
  clickhouse:
    image: clickhouse/clickhouse-server:23.12.2.59-alpine
    ports:
      - "8123:8123" # Web UI
      - "9000:9000" # SQL port
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://clickhouse:8123/ping || exit 1
      interval: 1s
      timeout: 1s
      start_period: 1m