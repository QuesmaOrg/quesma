name: Verify

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  code-and-unit-tests:
    strategy:
      matrix:
        module: [ "quesma" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: ${{ matrix.module }}/go.sum
          go-version: '1.22'

      - name: gofmt
        working-directory: ${{ matrix.module }}
        run: gofmt -l -d . | (! grep . -q) || exit 1

      - name: Go Vet
        working-directory: ${{ matrix.module }}
        run: go vet ./...

      - uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "2023.1.6"
          install-go: false
          working-directory: ${{ matrix.module }}

      - name: Build
        working-directory: ${{ matrix.module }}
        run: go build -v ./...

      - name: Test
        working-directory: ${{ matrix.module }}
        run: go test -v ./...

  build:
    strategy:
        matrix:
            module: [ "quesma", "device-log-generator", "log-generator", "query-generator" ]
            # clean is slower with caching, so we disable it
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: ${{ matrix.module }}/go.sum
          go-version: '1.22'

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.module }}/.
          tags: ${{ matrix.module }}:latest
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.module }}
          path: /tmp/image.tar

  smoke-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: smoke-test/go.sum
          go-version: '1.22'

      - name: Download images
        uses: actions/download-artifact@v4
        with:
          path: /tmp/images

      - name: Load images
        run: |
          for file in /tmp/images/*/*.tar; do
            docker load --input $file
          done
          docker image ls -a  

      - name: Build and start docker-compose
        timeout-minutes: 10
        run: docker-compose -f ci.yml up -d

      - name: Wait until services are healthy
        timeout-minutes: 6
        working-directory: smoke-test
        run: go run main.go --wait-for-start

      - name: Verify if data is flowing
        working-directory: smoke-test
        run: go run main.go

      - name: Print docker status
        if: failure()
        run: docker-compose ps

      - name: Print docker-compose logs
        if: failure()
        run: docker-compose logs
