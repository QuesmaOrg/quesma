name: E2E tests

on: # @TODO TBD WHEN WE RUN
  push:
    branches: [ "main", "e2e-github-workflow" ]
  workflow_dispatch:

jobs:
#  build-quesma-docker-image:
#    strategy:
#      matrix:
#        module: [ "quesma" ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: ${{ matrix.module }}/go.sum
          go-version: '1.22'

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.module }}/.
          tags: ${{ matrix.module }}:latest
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          DOCKER_BUILD_NO_SUMMARY: true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.module }}
          path: /tmp/image.tar
          retention-days: 1

  e2e-test-run:
    runs-on: ubuntu-latest
    #needs: [build-quesma-docker-image]
    steps:
      - uses: actions/checkout@v4
        with:     ## @TODO REMOVE
          ref: ${{ github.event.inputs.GIT_REF }}
#
#      - name: Set up Go
#        uses: actions/setup-go@v5
#        with:
#          cache-dependency-path: smoke-test/go.sum
#          go-version: '1.22'
#
#      - name: Download images
#        uses: actions/download-artifact@v4
#        with:
#          path: /tmp/images
#
#      - name: Load images
#        run: |
#          for file in /tmp/images/*/*.tar; do
#            docker load --input $file
#          done
#          docker image ls -a
#
#      - name: Build and start docker-compose
#        timeout-minutes: 10
#        run: docker-compose -f docker/e2e.yml up -d
#
#      - name: Wait until Elasticsearch is up
#        timeout-minutes: 6
#        run: until [ "$(curl -s -o /dev/null -w "%{http_code}" localhost:9200)" = "200" ]; do sleep 3; done
#
#      - name: Wait until ClickHouse is up
#        timeout-minutes: 6
#        run: until [ "$(curl -s -o /dev/null -w "%{http_code}" localhost:8123)" = "200" ]; do sleep 3; done
#
#      - name: Wait until Quesma is up ('/' is call routed to Elasticsearch)
#        timeout-minutes: 6
#        run: until [ "$(curl -s -o /dev/null -w "%{http_code}" localhost:8080)" = "200" ]; do sleep 3; done
#
#      - name: Run e2e tests
#        working-directory: quesma
#        run: go test -race --tags=integration  -v ./...
#
      - name: Print PR number
        run: echo $(gh pr list --search ${{ github.sha }})

      - name: Add a comment to the PR
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -X POST \
               -d '{"body": "Manual workflow triggered."}' \
               https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments
        env:
          PR_NUMBER: ${{ github.event.number }}